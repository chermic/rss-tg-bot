name: Build and Push Docker Images

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    environment: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx (for advanced building features)
      uses: docker/setup-buildx-action@v3

    # - name: Create .env file
    #   run: |
    #     touch .env
    #     echo TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }} >> .env

    - name: Check Docker Hub credentials
      id: docker-check
      shell: bash
      run: |
        if [ "${{ secrets.DOCKER_HUB_LOGIN }}" != '' ] && [ "${{ secrets.DOCKER_HUB_TOKEN }}" != '' ]; then
          echo "ready=true" >> $GITHUB_OUTPUT
        else
          echo "ready=false" >> $GITHUB_OUTPUT
          echo "Missing Docker Hub credentials"
        fi

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Extract Docker image metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKER_HUB_LOGIN }}/rss-parser-tg-bot-app

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Build and push Docker images with Docker Compose
      run: |
        docker compose -f compose.yaml build

    # - name: Export Docker image
    #   # Заменить хардкодное имя образа на динамическое
    #   run: |
    #     docker save rss-parser-tg-bot-app > ${{ runner.temp }}/composed-image.tar
      
    - name: Execute remote SSH commands using password
      uses: appleboy/ssh-action@v1
      with:
          host: ${{ secrets.PRODUCTION_SERVER_ADDRESS }}
          username: ${{ secrets.PRODUCTION_SERVER_USERNAME }}
          password: ${{ secrets.PRODUCTION_SERVER_PASSWORD }}
          port: ${{ secrets.PRODUCTION_SERVER_PORT }}
          script: whoami
    
    # - name: Upload Docker image as artifact
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: composed-docker-image
    #     path: ${{ runner.temp }}/composed-image.tar
