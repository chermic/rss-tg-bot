name: Build and Push Docker Images

on:
  push:
    branches:
      - master

env:
  APP_PATH: /home/${{ secrets.PRODUCTION_SERVER_USERNAME }}/${{ vars.APP_DIR_NAME }}
jobs:
  build:
    runs-on: ubuntu-latest
    environment: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx (for advanced building features)
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Extract Docker image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/rss-parser-tg-bot

      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: .
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push with Docker Compose
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        run: |
          echo $TELEGRAM_BOT_TOKEN
          docker compose -f compose.prod.yaml build
          docker compose -f compose.prod.yaml push

      - name: Check compose.yaml exists
        run: ls -l compose.prod.yaml

      - name: Create application directory
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.PRODUCTION_SERVER_ADDRESS }}
          username: ${{ secrets.PRODUCTION_SERVER_USERNAME }}
          password: ${{ secrets.PRODUCTION_SERVER_PASSWORD }}
          port: ${{ secrets.PRODUCTION_SERVER_PORT }}
          script: |
            set -e
            mkdir -p ${{ env.APP_PATH }}

      - name: Upload compose.yaml with SCP
        uses: appleboy/scp-action@v1
        with:
          username: ${{ secrets.PRODUCTION_SERVER_USERNAME }}
          password: ${{ secrets.PRODUCTION_SERVER_PASSWORD }}
          host: ${{ secrets.PRODUCTION_SERVER_ADDRESS }}
          port: ${{ secrets.PRODUCTION_SERVER_PORT }}
          source: "docker"
          target: "${{ env.APP_PATH }}/"

      - name: Execute remote SSH commands
        uses: appleboy/ssh-action@v1
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        with:
          host: ${{ secrets.PRODUCTION_SERVER_ADDRESS }}
          username: ${{ secrets.PRODUCTION_SERVER_USERNAME }}
          password: ${{ secrets.PRODUCTION_SERVER_PASSWORD }}
          port: ${{ secrets.PRODUCTION_SERVER_PORT }}
          envs: TELEGRAM_BOT_TOKEN
          script: |
            set -e
            cd ${{ env.APP_PATH }}
            # echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" > .env
            docker compose pull
            docker compose up -d
